{"version":3,"file":"run.js","sourceRoot":"","sources":["../../../../mainmenu/src/run.ts"],"names":[],"mappings":";AAAA,0CAA0C;AAC1C,2DAA2D;;;;;;;;;;;;AAM3D,qCAEmB;AAgBnB;;GAEG;AACH;IACsB,2BAAc;IAClC;;OAEG;IACH,iBAAY,OAAsB;QAAlC,YACE,kBAAM,OAAO,CAAC,SAKf;QAJC,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;QAE9B,KAAI,CAAC,WAAW;YACd,IAAI,GAAG,EAAgC,CAAC;;IAC5C,CAAC;IAUD;;OAEG;IACH,yBAAO,GAAP;QACE,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;QACzB,iBAAM,OAAO,WAAE,CAAC;IAClB,CAAC;IACH,cAAC;AAAD,CAAC,AA5BD,CACsB,wBAAc,GA2BnC;AA3BK,0BAAO","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport {\n  Menu, Widget\n} from '@phosphor/widgets';\n\nimport {\n  IJupyterLabMenu, IMenuExtender, JupyterLabMenu\n} from './labmenu';\n\n/**\n * An interface for a Run menu.\n */\nexport\ninterface IRunMenu extends IJupyterLabMenu {\n  /**\n   * A set storing ICodeRunner for the Run menu.\n   *\n   * ### Notes\n   * The key for the set may be used in menu labels.\n   */\n  readonly codeRunners: Set<IRunMenu.ICodeRunner<Widget>>;\n}\n\n/**\n * An extensible Run menu for the application.\n */\nexport\nclass RunMenu extends JupyterLabMenu implements IRunMenu {\n  /**\n   * Construct the run menu.\n   */\n  constructor(options: Menu.IOptions) {\n    super(options);\n    this.menu.title.label = 'Run';\n\n    this.codeRunners =\n      new Set<IRunMenu.ICodeRunner<Widget>>();\n  }\n\n  /**\n   * A set storing ICodeRunner for the Run menu.\n   *\n   * ### Notes\n   * The key for the set may be used in menu labels.\n   */\n  readonly codeRunners: Set<IRunMenu.ICodeRunner<Widget>>;\n\n  /**\n   * Dispose of the resources held by the run menu.\n   */\n  dispose(): void {\n    this.codeRunners.clear();\n    super.dispose();\n  }\n}\n\n/**\n * A namespace for RunMenu statics.\n */\nexport\nnamespace IRunMenu {\n  /**\n   * An object that runs code, which may be\n   * registered with the Run menu.\n   */\n  export\n  interface ICodeRunner<T extends Widget> extends IMenuExtender<T> {\n    /**\n     * A string label for the thing that is being run,\n     * which is used to populate the menu labels.\n     */\n    noun: string;\n\n    /**\n     * A function to run a chunk of code.\n     */\n    run?: (widget: T) => Promise<void>;\n\n    /**\n     * A function to run the entirety of the code hosted by the widget.\n     */\n    runAll?: (widget: T) => Promise<void>;\n\n    /**\n     * A function to restart and run all the code hosted by the widget.\n     */\n    restartAndRunAll?: (widget: T) => Promise<void>;\n  }\n}\n"]}