{"version":3,"file":"file.js","sourceRoot":"","sources":["../../../../mainmenu/src/file.ts"],"names":[],"mappings":";AAAA,0CAA0C;AAC1C,2DAA2D;;;;;;;;;;;;AAM3D,qCAEmB;AAuBnB;;GAEG;AACH;IACuB,4BAAc;IACnC,kBAAY,OAAsB;QAAlC,YACE,kBAAM,OAAO,CAAC,SAWf;QATC,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;QAE/B,4BAA4B;QAC5B,KAAI,CAAC,OAAO,GAAG,IAAI,wBAAc,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAClD,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;QACtC,KAAI,CAAC,gBAAgB;YACnB,IAAI,GAAG,EAAsC,CAAC;QAChD,KAAI,CAAC,eAAe;YAClB,IAAI,GAAG,EAAqC,CAAC;;IACjD,CAAC;IAiBD;;OAEG;IACH,0BAAO,GAAP;QACE,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QACvB,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;QAC7B,iBAAM,OAAO,WAAE,CAAC;IAClB,CAAC;IACH,eAAC;AAAD,CAAC,AAvCD,CACuB,wBAAc,GAsCpC;AAtCK,4BAAQ","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport {\n  Menu, Widget\n} from '@phosphor/widgets';\n\nimport {\n  IJupyterLabMenu, IMenuExtender, JupyterLabMenu\n} from './labmenu';\n\n/**\n * An interface for a File menu.\n */\nexport\ninterface IFileMenu extends IJupyterLabMenu {\n  /**\n   * A submenu for creating new files/launching new activities.\n   */\n  readonly newMenu: IJupyterLabMenu;\n\n  /**\n   * The close and cleanup extension point.\n   */\n  readonly closeAndCleaners: Set<IFileMenu.ICloseAndCleaner<Widget>>;\n\n  /**\n   * A set storing IConsoleCreators for the File menu.\n   */\n  readonly consoleCreators: Set<IFileMenu.IConsoleCreator<Widget>>;\n}\n\n/**\n * An extensible FileMenu for the application.\n */\nexport\nclass FileMenu extends JupyterLabMenu implements IFileMenu {\n  constructor(options: Menu.IOptions) {\n    super(options);\n\n    this.menu.title.label = 'File';\n\n    // Create the \"New\" submenu.\n    this.newMenu = new JupyterLabMenu(options, false);\n    this.newMenu.menu.title.label = 'New';\n    this.closeAndCleaners =\n      new Set<IFileMenu.ICloseAndCleaner<Widget>>();\n    this.consoleCreators =\n      new Set<IFileMenu.IConsoleCreator<Widget>>();\n  }\n\n  /**\n   * The New submenu.\n   */\n  readonly newMenu: JupyterLabMenu;\n\n  /**\n   * The close and cleanup extension point.\n   */\n  readonly closeAndCleaners: Set<IFileMenu.ICloseAndCleaner<Widget>>;\n\n  /**\n   * A set storing IConsoleCreators for the Kernel menu.\n   */\n  readonly consoleCreators: Set<IFileMenu.IConsoleCreator<Widget>>;\n\n  /**\n   * Dispose of the resources held by the file menu.\n   */\n  dispose(): void {\n    this.newMenu.dispose();\n    this.consoleCreators.clear();\n    super.dispose();\n  }\n}\n\n\n/**\n * Namespace for IFileMenu\n */\nexport\nnamespace IFileMenu {\n  /**\n   * Interface for an activity that has some cleanup action associated\n   * with it in addition to merely closing its widget in the main area.\n   */\n  export\n  interface ICloseAndCleaner<T extends Widget> extends IMenuExtender<T> {\n    /**\n     * A label to use for the activity that is being cleaned up.\n     */\n    name: string;\n\n    /**\n     * A label to use for the cleanup action.\n     */\n    action: string;\n\n    /**\n     * A function to perform the close and cleanup action.\n     */\n    closeAndCleanup: (widget: T) => Promise<void>;\n  }\n\n  /**\n   * Interface for a command to create a console for an activity.\n   */\n  export\n  interface IConsoleCreator<T extends Widget> extends IMenuExtender<T> {\n    /**\n     * A label to use for the activity for which a console is being created.\n     */\n    name: string;\n\n    /**\n     * The function to create the console.\n     */\n    createConsole: (widget: T) => Promise<void>;\n  }\n}\n"]}