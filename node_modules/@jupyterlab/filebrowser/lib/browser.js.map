{"version":3,"file":"browser.js","sourceRoot":"","sources":["../../../../filebrowser/src/browser.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport {\n  showErrorMessage, Toolbar, ToolbarButton\n} from '@jupyterlab/apputils';\n\nimport {\n  DocumentManager\n} from '@jupyterlab/docmanager';\n\nimport {\n  Contents, ServerConnection\n} from '@jupyterlab/services';\n\nimport {\n  IIterator\n} from '@phosphor/algorithm';\n\nimport {\n  CommandRegistry\n} from '@phosphor/commands';\n\nimport {\n  PanelLayout, Widget\n} from '@phosphor/widgets';\n\nimport {\n  BreadCrumbs\n} from './crumbs';\n\nimport {\n  DirListing\n} from './listing';\n\nimport {\n  FileBrowserModel\n} from './model';\n\nimport {\n  Uploader\n} from './upload';\n\n\n/**\n * The class name added to file browsers.\n */\nconst FILE_BROWSER_CLASS = 'jp-FileBrowser';\n\n/**\n * The class name added to the filebrowser crumbs node.\n */\nconst CRUMBS_CLASS = 'jp-FileBrowser-crumbs';\n\n/**\n * The class name added to the filebrowser toolbar node.\n */\nconst TOOLBAR_CLASS = 'jp-FileBrowser-toolbar';\n\n/**\n * The class name added to the filebrowser listing node.\n */\nconst LISTING_CLASS = 'jp-FileBrowser-listing';\n\n/**\n * The class name added to the refresh button.\n */\nconst REFRESH_BUTTON = 'jp-RefreshIcon';\n\n/**\n * The class name added to a material icon button.\n */\nconst MATERIAL_CLASS = 'jp-MaterialIcon';\n\n\n/**\n * A widget which hosts a file browser.\n *\n * The widget uses the Jupyter Contents API to retreive contents,\n * and presents itself as a flat list of files and directories with\n * breadcrumbs.\n */\nexport\nclass FileBrowser extends Widget {\n  /**\n   * Construct a new file browser.\n   *\n   * @param model - The file browser view model.\n   */\n  constructor(options: FileBrowser.IOptions) {\n    super();\n    this.addClass(FILE_BROWSER_CLASS);\n    this.id = options.id;\n\n    const model = this.model = options.model;\n    const renderer = options.renderer;\n\n    model.connectionFailure.connect(this._onConnectionFailure, this);\n    this._manager = model.manager;\n    this._crumbs = new BreadCrumbs({ model });\n    this.toolbar = new Toolbar<Widget>();\n\n    let directoryPending = false;\n    let newFolder = new ToolbarButton({\n      className: 'jp-newFolderIcon',\n      onClick: () => {\n        if (directoryPending === true) {\n          return;\n        }\n        directoryPending = true;\n        this._manager.newUntitled({\n          path: model.path,\n          type: 'directory'\n        }).then(model => {\n          this._listing.selectItemByName(model.name);\n          directoryPending = false;\n        }).catch(err => {\n          directoryPending = false;\n        });\n      },\n      tooltip: 'New Folder'\n    });\n    newFolder.addClass(MATERIAL_CLASS);\n\n    let uploader = new Uploader({ model });\n\n    let refresher = new ToolbarButton({\n      className: REFRESH_BUTTON,\n      onClick: () => {\n        model.refresh();\n      },\n      tooltip: 'Refresh File List'\n    });\n    refresher.addClass(MATERIAL_CLASS);\n\n    this.toolbar.addItem('newFolder', newFolder);\n    this.toolbar.addItem('upload', uploader);\n    this.toolbar.addItem('refresher', refresher);\n\n    this._listing = new DirListing({ model, renderer });\n\n    this._crumbs.addClass(CRUMBS_CLASS);\n    this.toolbar.addClass(TOOLBAR_CLASS);\n    this._listing.addClass(LISTING_CLASS);\n\n    let layout = new PanelLayout();\n    layout.addWidget(this.toolbar);\n    layout.addWidget(this._crumbs);\n    layout.addWidget(this._listing);\n\n    this.layout = layout;\n    model.restore(this.id);\n  }\n\n  /**\n   * The model used by the file browser.\n   */\n  readonly model: FileBrowserModel;\n\n  /**\n   * The toolbar used by the file browser.\n   */\n  readonly toolbar: Toolbar<Widget>;\n\n  /**\n   * Create an iterator over the listing's selected items.\n   *\n   * @returns A new iterator over the listing's selected items.\n   */\n  selectedItems(): IIterator<Contents.IModel> {\n    return this._listing.selectedItems();\n  }\n\n  /**\n   * Rename the first currently selected item.\n   *\n   * @returns A promise that resolves with the new name of the item.\n   */\n  rename(): Promise<string> {\n    return this._listing.rename();\n  }\n\n  /**\n   * Cut the selected items.\n   */\n  cut(): void {\n    this._listing.cut();\n  }\n\n  /**\n   * Copy the selected items.\n   */\n  copy(): void {\n    this._listing.copy();\n  }\n\n  /**\n   * Paste the items from the clipboard.\n   *\n   * @returns A promise that resolves when the operation is complete.\n   */\n  paste(): Promise<void> {\n    return this._listing.paste();\n  }\n\n  /**\n   * Delete the currently selected item(s).\n   *\n   * @returns A promise that resolves when the operation is complete.\n   */\n  delete(): Promise<void> {\n    return this._listing.delete();\n  }\n\n  /**\n   * Duplicate the currently selected item(s).\n   *\n   * @returns A promise that resolves when the operation is complete.\n   */\n  duplicate(): Promise<void> {\n    return this._listing.duplicate();\n  }\n\n  /**\n   * Download the currently selected item(s).\n   */\n  download(): void {\n    this._listing.download();\n  }\n\n  /**\n   * Shut down kernels on the applicable currently selected items.\n   *\n   * @returns A promise that resolves when the operation is complete.\n   */\n  shutdownKernels(): Promise<void> {\n    return this._listing.shutdownKernels();\n  }\n\n  /**\n   * Select next item.\n   */\n  selectNext(): void {\n    this._listing.selectNext();\n  }\n\n  /**\n   * Select previous item.\n   */\n  selectPrevious(): void {\n    this._listing.selectPrevious();\n  }\n\n  /**\n   * Find a model given a click.\n   *\n   * @param event - The mouse event.\n   *\n   * @returns The model for the selected file.\n   */\n  modelForClick(event: MouseEvent): Contents.IModel | undefined {\n    return this._listing.modelForClick(event);\n  }\n\n  /**\n   * Handle a connection lost signal from the model.\n   */\n  private _onConnectionFailure(sender: FileBrowserModel, args: Error): void {\n    if (this._showingError) {\n      return;\n    }\n    this._showingError = true;\n\n    let title = 'Server Connection Error';\n    let networkMsg = (\n      'A connection to the Jupyter server could not be established.\\n' +\n      'JupyterLab will continue trying to reconnect.\\n' +\n      'Check your network connection or Jupyter server configuration.\\n'\n    );\n\n    // Check for a fetch error.\n    if (args instanceof ServerConnection.NetworkError) {\n      args.message = networkMsg;\n\n    } else if (args instanceof ServerConnection.ResponseError) {\n      if (args.response.status === 404) {\n        title = 'Directory not found';\n        args.message = `Directory not found: \"${this.model.path}\"`;\n      }\n    }\n\n    showErrorMessage(title, args).then(() => {\n      this._showingError = false;\n    });\n  }\n\n  private _crumbs: BreadCrumbs;\n  private _listing: DirListing;\n  private _manager: DocumentManager;\n  private _showingError = false;\n}\n\n\n/**\n * The namespace for the `FileBrowser` class statics.\n */\nexport\nnamespace FileBrowser {\n  /**\n   * An options object for initializing a file browser widget.\n   */\n  export\n  interface IOptions {\n    /**\n     * The command registry for use with the file browser.\n     */\n    commands: CommandRegistry;\n\n    /**\n     * The widget/DOM id of the file browser.\n     */\n    id: string;\n\n    /**\n     * A file browser model instance.\n     */\n    model: FileBrowserModel;\n\n    /**\n     * An optional renderer for the directory listing area.\n     *\n     * The default is a shared instance of `DirListing.Renderer`.\n     */\n    renderer?: DirListing.IRenderer;\n  }\n}\n"]}