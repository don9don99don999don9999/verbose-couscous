{"version":3,"file":"styling.js","sourceRoot":"","sources":["../../../../apputils/src/styling.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\n/**\n * A namespace for node styling.\n */\nexport\nnamespace Styling {\n  /**\n   * Style a node and its child elements with the default tag names.\n   *\n   * @param node - The base node.\n   *\n   * @param className - The optional CSS class to add to styled nodes.\n   */\n  export\n  function styleNode(node: HTMLElement, className=''): void {\n    styleNodeByTag(node, 'select', className);\n    styleNodeByTag(node, 'textarea', className);\n    styleNodeByTag(node, 'input', className);\n    styleNodeByTag(node, 'button', className);\n  }\n\n\n  /**\n   * Style a node and its elements that have a given tag name.\n   *\n   * @param node - The base node.\n   *\n   * @param tagName - The html tag name to style.\n   *\n   * @param className - The optional CSS class to add to styled nodes.\n   */\n  export\n  function styleNodeByTag(node: HTMLElement, tagName: string, className=''): void {\n    if (node.localName === tagName) {\n      node.classList.add('jp-mod-styled');\n    }\n    if (node.localName === 'select') {\n      wrapSelect(node as HTMLSelectElement);\n    }\n    let nodes = node.getElementsByTagName(tagName);\n    for (let i = 0; i < nodes.length; i++) {\n      let child = nodes[i];\n      child.classList.add('jp-mod-styled');\n      if (className) {\n        child.classList.add(className);\n      }\n      if (tagName === 'select') {\n        wrapSelect(child as HTMLSelectElement);\n      }\n    }\n  }\n\n  /**\n   * Wrap a select node.\n   */\n  export\n  function wrapSelect(node: HTMLSelectElement): HTMLElement {\n    let wrapper = document.createElement('div');\n    wrapper.classList.add('jp-select-wrapper');\n    node.addEventListener('focus', Private.onFocus);\n    node.addEventListener('blur', Private.onFocus);\n    node.classList.add('jp-mod-styled');\n    if (node.parentElement) {\n      node.parentElement.replaceChild(wrapper, node);\n    }\n    wrapper.appendChild(node);\n    return wrapper;\n  }\n}\n\n\n/**\n * The namespace for module private data.\n */\nnamespace Private {\n  /**\n   * Handle a focus event on a styled select.\n   */\n   export\n   function onFocus(event: FocusEvent): void {\n      let target = event.target as Element;\n      let parent = target.parentElement;\n      if (!parent) {\n        return;\n      }\n      if (event.type === 'focus') {\n        parent.classList.add('jp-mod-focused');\n      } else {\n        parent.classList.remove('jp-mod-focused');\n     }\n    }\n}\n"]}