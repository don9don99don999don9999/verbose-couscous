"use strict";
// Copyright (c) Jupyter Development Team.
// Distributed under the terms of the Modified BSD License.
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var widgets_1 = require("@phosphor/widgets");
/**
 * A widget which handles tab events according to JupyterLab convention.
 */
var MainAreaWidget = /** @class */ (function (_super) {
    __extends(MainAreaWidget, _super);
    /**
     * Construct a new main area widget.
     *
     * @param options - The options for initializing the widget.
     */
    function MainAreaWidget(options) {
        if (options === void 0) { options = {}; }
        var _this = _super.call(this, options) || this;
        _this.node.tabIndex = -1;
        _this.addClass('jp-MainAreaWidget');
        _this.layout = Private.createLayout(options);
        return _this;
    }
    /**
     * Handle `'activate-request'` messages.
     */
    MainAreaWidget.prototype.onActivateRequest = function (msg) {
        this.node.focus();
    };
    /**
     * Handle `'close-request'` messages.
     */
    MainAreaWidget.prototype.onCloseRequest = function (msg) {
        this.dispose();
    };
    return MainAreaWidget;
}(widgets_1.Widget));
exports.MainAreaWidget = MainAreaWidget;
/**
 * The namespace for the module implementation details.
 */
var Private;
(function (Private) {
    /**
     * Create a layout for the given options.
     */
    function createLayout(options) {
        return options.layout || new widgets_1.PanelLayout();
    }
    Private.createLayout = createLayout;
})(Private || (Private = {}));
