{"version":3,"file":"mimetype.js","sourceRoot":"","sources":["../../../../codeeditor/src/mimetype.ts"],"names":[],"mappings":";AAAA,0CAA0C;AAC1C,2DAA2D;;AAsC3D;;GAEG;AACH,IACU,sBAAsB,CAM/B;AAPD,WACU,sBAAsB;IAC9B;;OAEG;IAEG,sCAAe,GAAW,YAAY,CAAC;AAC/C,CAAC,EANS,sBAAsB,GAAtB,8BAAsB,KAAtB,8BAAsB,QAM/B","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport {\n  nbformat\n} from '@jupyterlab/coreutils';\n\n\n/**\n * The mime type service of a code editor.\n */\nexport\ninterface IEditorMimeTypeService {\n  /**\n   * Get a mime type for the given language info.\n   *\n   * @param info - The language information.\n   *\n   * @returns A valid mimetype.\n   *\n   * #### Notes\n   * If a mime type cannot be found returns the defaul mime type `text/plain`, never `null`.\n   */\n  getMimeTypeByLanguage(info: nbformat.ILanguageInfoMetadata): string;\n\n  /**\n   * Get a mime type for the given file path.\n   *\n   * @param filePath - The full path to the file.\n   *\n   * @returns A valid mimetype.\n   *\n   * #### Notes\n   * If a mime type cannot be found returns the defaul mime type `text/plain`, never `null`.\n   */\n  getMimeTypeByFilePath(filePath: string): string;\n}\n\n\n/**\n * A namespace for `IEditorMimeTypeService`.\n */\nexport\nnamespace IEditorMimeTypeService {\n  /**\n   * The default mime type.\n   */\n  export\n  const defaultMimeType: string = 'text/plain';\n}\n"]}