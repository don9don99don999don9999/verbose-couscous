{"version":3,"file":"jsoneditor.js","sourceRoot":"","sources":["../../../../codeeditor/src/jsoneditor.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport {\n  IObservableJSON\n} from '@jupyterlab/observables';\n\nimport {\n  JSONExt, JSONObject\n} from '@phosphor/coreutils';\n\nimport {\n  Message\n} from '@phosphor/messaging';\n\nimport {\n  Widget\n} from '@phosphor/widgets';\n\nimport {\n  h, VirtualDOM\n} from '@phosphor/virtualdom';\n\nimport {\n  CodeEditor\n} from './editor';\n\n\n/**\n * The class name added to a JSONEditor instance.\n */\nconst JSONEDITOR_CLASS = 'jp-JSONEditor';\n\n/**\n * The class name added when the Metadata editor contains invalid JSON.\n */\nconst ERROR_CLASS = 'jp-mod-error';\n\n/**\n * The class name added to the editor host node.\n */\nconst HOST_CLASS = 'jp-JSONEditor-host';\n\n/**\n * The class name added to the header area.\n */\nconst HEADER_CLASS = 'jp-JSONEditor-header';\n\n/**\n * The class name added to the title node.\n */\nconst TITLE_CLASS = 'jp-JSONEditor-title';\n\n/**\n * The class name added to the collapser node.\n */\nconst COLLAPSER_CLASS = 'jp-JSONEditor-collapser';\n\n/**\n * The class name added to the collapser node that is enabled.\n */\nconst COLLAPSE_ENABLED_CLASS = 'jp-mod-collapse-enabled';\n\n/**\n * The class name added to the revert button.\n */\nconst REVERT_CLASS = 'jp-JSONEditor-revertButton';\n\n/**\n * The class name added to the commit button.\n */\nconst COMMIT_CLASS = 'jp-JSONEditor-commitButton';\n\n/**\n * The class name added to collapsed items.\n */\nconst COLLAPSED_CLASS = 'jp-mod-collapsed';\n\n\n/**\n * A widget for editing observable JSON.\n */\nexport\nclass JSONEditor extends Widget {\n  /**\n   * Construct a new JSON editor.\n   */\n  constructor(options: JSONEditor.IOptions) {\n    super({ node: Private.createEditorNode(options) });\n    let host = this.editorHostNode;\n    let model = new CodeEditor.Model();\n    model.value.text = 'No data!';\n    model.mimeType = 'application/json';\n    model.value.changed.connect(this._onValueChanged, this);\n    this.model = model;\n    this.editor = options.editorFactory({ host, model });\n    this.editor.setOption('readOnly', true);\n    this.collapsible = !!options.collapsible;\n  }\n\n  /**\n   * The code editor used by the editor.\n   */\n  readonly editor: CodeEditor.IEditor;\n\n  /**\n   * The code editor model used by the editor.\n   */\n  readonly model: CodeEditor.IModel;\n\n  /**\n   * Whether the editor is collapsible.\n   */\n  readonly collapsible: boolean;\n\n  /**\n   * The title of the editor.\n   */\n  get editorTitle(): string {\n    return this.titleNode.textContent || '';\n  }\n  set editorTitle(value: string) {\n    this.titleNode.textContent = value;\n  }\n\n  /**\n   * Get the editor host node used by the JSON editor.\n   */\n  get editorHostNode(): HTMLElement {\n    return this.node.getElementsByClassName(HOST_CLASS)[0] as HTMLElement;\n  }\n\n  /**\n   * Get the header node used by the JSON editor.\n   */\n  get headerNode(): HTMLElement {\n    return this.node.getElementsByClassName(HEADER_CLASS)[0] as HTMLElement;\n  }\n\n  /**\n   * Get the title node used by the JSON editor.\n   */\n  get titleNode(): HTMLElement {\n    return this.node.getElementsByClassName(TITLE_CLASS)[0] as HTMLElement;\n  }\n\n  /**\n   * Get the collapser node used by the JSON editor.\n   */\n  get collapserNode(): HTMLElement {\n    return this.node.getElementsByClassName(COLLAPSER_CLASS)[0] as HTMLElement;\n  }\n\n  /**\n   * Get the revert button used by the JSON editor.\n   */\n  get revertButtonNode(): HTMLElement {\n    return this.node.getElementsByClassName(REVERT_CLASS)[0] as HTMLElement;\n  }\n\n  /**\n   * Get the commit button used by the JSON editor.\n   */\n  get commitButtonNode(): HTMLElement {\n    return this.node.getElementsByClassName(COMMIT_CLASS)[0] as HTMLElement;\n  }\n\n  /**\n   * The observable source.\n   */\n  get source(): IObservableJSON | null {\n    return this._source;\n  }\n  set source(value: IObservableJSON | null) {\n    if (this._source === value) {\n      return;\n    }\n    if (this._source) {\n      this._source.changed.disconnect(this._onSourceChanged, this);\n    }\n    this._source = value;\n    this.editor.setOption('readOnly', value === null);\n    if (value) {\n      value.changed.connect(this._onSourceChanged, this);\n    }\n    this._setValue();\n  }\n\n  /**\n   * Get whether the editor is dirty.\n   */\n  get isDirty(): boolean {\n    return this._dataDirty || this._inputDirty;\n  }\n\n  /**\n   * Handle the DOM events for the widget.\n   *\n   * @param event - The DOM event sent to the widget.\n   *\n   * #### Notes\n   * This method implements the DOM `EventListener` interface and is\n   * called in response to events on the notebook panel's node. It should\n   * not be called directly by user code.\n   */\n  handleEvent(event: Event): void {\n    switch (event.type) {\n      case 'blur':\n        this._evtBlur(event as FocusEvent);\n        break;\n      case 'click':\n        this._evtClick(event as MouseEvent);\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Handle `after-attach` messages for the widget.\n   */\n  protected onAfterAttach(msg: Message): void {\n    let node = this.editorHostNode;\n    node.addEventListener('blur', this, true);\n    node.addEventListener('click', this, true);\n    this.revertButtonNode.hidden = true;\n    this.commitButtonNode.hidden = true;\n    this.headerNode.addEventListener('click', this);\n    if (this.isVisible) {\n      this.update();\n    }\n  }\n\n  /**\n   * Handle `after-show` messages for the widget.\n   */\n  protected onAfterShow(msg: Message): void {\n    this.update();\n  }\n\n  /**\n   * Handle `update-request` messages for the widget.\n   */\n  protected onUpdateRequest(msg: Message): void {\n    this.editor.refresh();\n  }\n\n  /**\n   * Handle `before-detach` messages for the widget.\n   */\n  protected onBeforeDetach(msg: Message): void {\n    let node = this.editorHostNode;\n    node.removeEventListener('blur', this, true);\n    node.removeEventListener('click', this, true);\n    this.headerNode.removeEventListener('click', this);\n  }\n\n  /**\n   * Handle a change to the metadata of the source.\n   */\n  private _onSourceChanged(sender: IObservableJSON, args: IObservableJSON.IChangedArgs) {\n    if (this._changeGuard) {\n      return;\n    }\n    if (this._inputDirty || this.editor.hasFocus()) {\n      this._dataDirty = true;\n      return;\n    }\n    this._setValue();\n  }\n\n  /**\n   * Handle change events.\n   */\n  private _onValueChanged(): void {\n    let valid = true;\n    try {\n      let value = JSON.parse(this.editor.model.value.text);\n      this.removeClass(ERROR_CLASS);\n      this._inputDirty = (\n        !this._changeGuard && !JSONExt.deepEqual(value, this._originalValue)\n      );\n    } catch (err) {\n      this.addClass(ERROR_CLASS);\n      this._inputDirty = true;\n      valid = false;\n    }\n    this.revertButtonNode.hidden = !this._inputDirty;\n    this.commitButtonNode.hidden = !valid || !this._inputDirty;\n  }\n\n  /**\n   * Handle blur events for the text area.\n   */\n  private _evtBlur(event: FocusEvent): void {\n    // Update the metadata if necessary.\n    if (!this._inputDirty && this._dataDirty) {\n      this._setValue();\n    }\n  }\n\n  /**\n   * Handle click events for the buttons.\n   */\n  private _evtClick(event: MouseEvent): void {\n    let target = event.target as HTMLElement;\n    switch (target) {\n    case this.revertButtonNode:\n      this._setValue();\n      break;\n    case this.commitButtonNode:\n      if (!this.commitButtonNode.hidden && !this.hasClass(ERROR_CLASS)) {\n        this._changeGuard = true;\n        this._mergeContent();\n        this._changeGuard = false;\n        this._setValue();\n      }\n      break;\n    case this.titleNode:\n    case this.collapserNode:\n      if (this.collapsible) {\n        let collapser = this.collapserNode;\n        if (collapser.classList.contains(COLLAPSED_CLASS)) {\n          collapser.classList.remove(COLLAPSED_CLASS);\n          this.editorHostNode.classList.remove(COLLAPSED_CLASS);\n        } else {\n          collapser.classList.add(COLLAPSED_CLASS);\n          this.editorHostNode.classList.add(COLLAPSED_CLASS);\n        }\n      }\n      break;\n    case this.editorHostNode:\n      this.editor.focus();\n      break;\n    default:\n      break;\n    }\n  }\n\n  /**\n   * Merge the user content.\n   */\n  private _mergeContent(): void {\n    let model = this.editor.model;\n    let current = this._source ? this._source.toJSON() : { };\n    let old = this._originalValue;\n    let user = JSON.parse(model.value.text) as JSONObject;\n    let source = this.source;\n    if (!source) {\n      return;\n    }\n\n    // If it is in user and has changed from old, set in current.\n    for (let key in user) {\n      if (!JSONExt.deepEqual(user[key], old[key] || null)) {\n        current[key] = user[key];\n      }\n    }\n    // If it was in old and is not in user, remove from current.\n    for (let key in old) {\n      if (!(key in user)) {\n        delete current[key];\n        source.delete(key);\n      }\n    }\n    // Set the values.\n    for (let key in current) {\n      source.set(key, current[key]);\n    }\n  }\n\n  /**\n   * Set the value given the owner contents.\n   */\n  private _setValue(): void {\n    this._dataDirty = false;\n    this._inputDirty = false;\n    this.revertButtonNode.hidden = true;\n    this.commitButtonNode.hidden = true;\n    this.removeClass(ERROR_CLASS);\n    let model = this.editor.model;\n    let content = this._source ? this._source.toJSON() : { };\n    this._changeGuard = true;\n    if (content === void 0) {\n      model.value.text = 'No data!';\n      this._originalValue = JSONExt.emptyObject;\n    } else {\n      let value = JSON.stringify(content, null, 4);\n      model.value.text = value;\n      this._originalValue = content;\n      // Move the cursor to within the brace.\n      if (value.length > 1 && value[0] === '{') {\n        this.editor.setCursorPosition({ line: 0, column: 1 });\n      }\n    }\n    this.editor.refresh();\n    this._changeGuard = false;\n    this.commitButtonNode.hidden = true;\n    this.revertButtonNode.hidden = true;\n  }\n\n  private _dataDirty = false;\n  private _inputDirty = false;\n  private _source: IObservableJSON | null = null;\n  private _originalValue = JSONExt.emptyObject;\n  private _changeGuard = false;\n}\n\n\n/**\n * The static namespace JSONEditor class statics.\n */\nexport\nnamespace JSONEditor {\n  /**\n   * The options used to initialize a json editor.\n   */\n  export\n  interface IOptions {\n    /**\n     * The editor factory used by the editor.\n     */\n    editorFactory: CodeEditor.Factory;\n\n    /**\n     * The title of the editor. Defaults to an empty string.\n     */\n    title?: string;\n\n    /**\n     * Whether the title should be collapsible. Defaults to `false`.\n     */\n    collapsible?: boolean;\n  }\n}\n\n\n/**\n * The namespace for module private data.\n */\nnamespace Private {\n  /**\n   * Create the node for the JSON Editor.\n   */\n  export\n  function createEditorNode(options: JSONEditor.IOptions): HTMLElement {\n    let revertTitle = 'Revert changes to data';\n    let confirmTitle = 'Commit changes to data';\n    let collapseClass = COLLAPSER_CLASS;\n    if (options.collapsible) {\n      collapseClass += ` ${COLLAPSE_ENABLED_CLASS}`;\n    }\n    return VirtualDOM.realize(\n      h.div({ className: JSONEDITOR_CLASS },\n        h.div({ className: HEADER_CLASS },\n          h.span({ className: TITLE_CLASS }, options.title || ''),\n          h.span({ className: collapseClass }),\n          h.span({ className: REVERT_CLASS, title: revertTitle }),\n          h.span({ className: COMMIT_CLASS, title: confirmTitle })),\n        h.div({ className: HOST_CLASS }))\n    );\n  }\n}\n"]}