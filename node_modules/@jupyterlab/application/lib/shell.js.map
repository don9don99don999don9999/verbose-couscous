{"version":3,"file":"shell.js","sourceRoot":"","sources":["../../../../application/src/shell.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport {\n  ArrayExt, each, find, IIterator, iter, toArray\n} from '@phosphor/algorithm';\n\nimport {\n  PromiseDelegate\n} from '@phosphor/coreutils';\n\nimport {\n  Message, MessageLoop, IMessageHandler\n} from '@phosphor/messaging';\n\nimport {\n  ISignal, Signal\n} from '@phosphor/signaling';\n\nimport {\n  BoxLayout, BoxPanel, DockLayout, DockPanel, FocusTracker,\n  Panel, SplitPanel, StackedPanel, TabBar, Title, Widget\n} from '@phosphor/widgets';\n\nimport {\n  DocumentRegistry\n} from '@jupyterlab/docregistry';\n\n\n/**\n * The class name added to AppShell instances.\n */\nconst APPLICATION_SHELL_CLASS = 'jp-ApplicationShell';\n\n/**\n * The class name added to side bar instances.\n */\nconst SIDEBAR_CLASS = 'jp-SideBar';\n\n/**\n * The class name added to the current widget's title.\n */\nconst CURRENT_CLASS = 'jp-mod-current';\n\n/**\n * The class name added to the active widget's title.\n */\nconst ACTIVE_CLASS = 'jp-mod-active';\n\n/**\n * The default rank of items added to a sidebar.\n */\nconst DEFAULT_RANK = 500;\n\n/**\n * The data attribute added to the document body indicating shell's mode.\n */\nconst MODE_ATTRIBUTE = 'data-shell-mode';\n\nconst ACTIVITY_CLASS = 'jp-Activity';\n\n\n/**\n * The application shell for JupyterLab.\n */\nexport\nclass ApplicationShell extends Widget {\n  /**\n   * Construct a new application shell.\n   */\n  constructor() {\n    super();\n    this.addClass(APPLICATION_SHELL_CLASS);\n    this.id = 'main';\n\n    let topPanel = this._topPanel = new Panel();\n    let hboxPanel = this._hboxPanel = new BoxPanel();\n    let dockPanel = this._dockPanel = new DockPanel();\n    MessageLoop.installMessageHook(dockPanel, this._dockChildHook);\n\n    let hsplitPanel = this._hsplitPanel = new SplitPanel();\n    let leftHandler = this._leftHandler = new Private.SideBarHandler('left');\n    let rightHandler = this._rightHandler = new Private.SideBarHandler('right');\n    let rootLayout = new BoxLayout();\n\n    topPanel.id = 'jp-top-panel';\n    hboxPanel.id = 'jp-main-content-panel';\n    dockPanel.id = 'jp-main-dock-panel';\n    hsplitPanel.id = 'jp-main-split-panel';\n\n    leftHandler.sideBar.addClass(SIDEBAR_CLASS);\n    leftHandler.sideBar.addClass('jp-mod-left');\n    leftHandler.stackedPanel.id = 'jp-left-stack';\n\n    rightHandler.sideBar.addClass(SIDEBAR_CLASS);\n    rightHandler.sideBar.addClass('jp-mod-right');\n    rightHandler.stackedPanel.id = 'jp-right-stack';\n\n    hboxPanel.spacing = 0;\n    dockPanel.spacing = 5;\n    hsplitPanel.spacing = 1;\n\n    hboxPanel.direction = 'left-to-right';\n    hsplitPanel.orientation = 'horizontal';\n\n    SplitPanel.setStretch(leftHandler.stackedPanel, 0);\n    SplitPanel.setStretch(dockPanel, 1);\n    SplitPanel.setStretch(rightHandler.stackedPanel, 0);\n\n    BoxPanel.setStretch(leftHandler.sideBar, 0);\n    BoxPanel.setStretch(hsplitPanel, 1);\n    BoxPanel.setStretch(rightHandler.sideBar, 0);\n\n    hsplitPanel.addWidget(leftHandler.stackedPanel);\n    hsplitPanel.addWidget(dockPanel);\n    hsplitPanel.addWidget(rightHandler.stackedPanel);\n\n    hboxPanel.addWidget(leftHandler.sideBar);\n    hboxPanel.addWidget(hsplitPanel);\n    hboxPanel.addWidget(rightHandler.sideBar);\n\n    rootLayout.direction = 'top-to-bottom';\n    rootLayout.spacing = 0; // TODO make this configurable?\n\n    BoxLayout.setStretch(topPanel, 0);\n    BoxLayout.setStretch(hboxPanel, 1);\n\n    rootLayout.addWidget(topPanel);\n    rootLayout.addWidget(hboxPanel);\n\n    this.layout = rootLayout;\n\n    // Connect change listeners.\n    this._tracker.currentChanged.connect(this._onCurrentChanged, this);\n    this._tracker.activeChanged.connect(this._onActiveChanged, this);\n\n    // Connect main layout change listener.\n    this._dockPanel.layoutModified.connect(this._onLayoutModified, this);\n\n    // Catch current changed events on the side handlers.\n    this._leftHandler.sideBar.currentChanged.connect(this._onLayoutModified, this);\n    this._rightHandler.sideBar.currentChanged.connect(this._onLayoutModified, this);\n  }\n\n  /**\n   * A signal emitted when main area's active focus changes.\n   */\n  get activeChanged(): ISignal<this, ApplicationShell.IChangedArgs> {\n    return this._activeChanged;\n  }\n\n  /**\n   * The active widget in the shell's main area.\n   */\n  get activeWidget(): Widget | null {\n    return this._tracker.activeWidget;\n  }\n\n  /**\n   * A signal emitted when main area's current focus changes.\n   */\n  get currentChanged(): ISignal<this, ApplicationShell.IChangedArgs> {\n    return this._currentChanged;\n  }\n\n  /**\n   * The current widget in the shell's main area.\n   */\n  get currentWidget(): Widget | null {\n    return this._tracker.currentWidget;\n  }\n\n  /**\n   * A signal emitted when the main area's layout is modified.\n   */\n  get layoutModified(): ISignal<this, void> {\n    return this._layoutModified;\n  }\n\n  /**\n   * Whether the left area is collapsed.\n   */\n  get leftCollapsed(): boolean {\n    return !this._leftHandler.sideBar.currentTitle;\n  }\n\n  /**\n   * Whether the left area is collapsed.\n   */\n  get rightCollapsed(): boolean {\n    return !this._rightHandler.sideBar.currentTitle;\n  }\n\n  /**\n   * Whether JupyterLab is in presentation mode with the `jp-mod-presentationMode` CSS class.\n   */\n  get presentationMode(): boolean {\n    return this.hasClass('jp-mod-presentationMode');\n  }\n\n  /**\n   * Enable/disable presentation mode (`jp-mod-presentationMode` CSS class) with a boolean.\n   */\n  set presentationMode(value: boolean) {\n    this.toggleClass('jp-mod-presentationMode', value);\n  }\n\n  /**\n   * The main dock area's user interface mode.\n   */\n  get mode(): DockPanel.Mode {\n    return this._dockPanel.mode;\n  }\n  set mode(mode: DockPanel.Mode) {\n    const dock = this._dockPanel;\n    if (mode === dock.mode) {\n      return;\n    }\n\n    if (mode === 'single-document') {\n      this._cachedLayout = dock.saveLayout();\n      dock.mode = mode;\n\n      // In case the active widget in the dock panel is *not* the active widget\n      // of the application, defer to the application.\n      if (this.currentWidget) {\n        dock.activateWidget(this.currentWidget);\n      }\n\n      // Set the mode data attribute on the document body.\n      document.body.setAttribute(MODE_ATTRIBUTE, mode);\n      return;\n    }\n\n    // Cache a reference to every widget currently in the dock panel.\n    const widgets = toArray(dock.widgets());\n\n    // Toggle back to multiple document mode.\n    dock.mode = mode;\n\n    // Restore the original layout.\n    if (this._cachedLayout) {\n\n      // Remove any disposed widgets in the cached layout and restore.\n      Private.normalizeAreaConfig(dock, this._cachedLayout.main);\n      dock.restoreLayout(this._cachedLayout);\n      this._cachedLayout = null;\n    }\n\n    // Add any widgets created during single document mode, which have\n    // subsequently been removed from the dock panel after the multiple document\n    // layout has been restored.\n    widgets.forEach(widget => {\n      if (!widget.parent) {\n        this.addToMainArea(widget);\n      }\n    });\n\n    // In case the active widget in the dock panel is *not* the active widget\n    // of the application, defer to the application.\n    if (this.currentWidget) {\n      dock.activateWidget(this.currentWidget);\n    }\n\n    // Set the mode data attribute on the document body.\n    document.body.setAttribute(MODE_ATTRIBUTE, mode);\n  }\n\n  /**\n   * Promise that resolves when state is first restored, returning layout\n   * description.\n   */\n  get restored(): Promise<ApplicationShell.ILayout> {\n    return this._restored.promise;\n  }\n\n  /**\n   * Activate a widget in its area.\n   */\n  activateById(id: string): void {\n    if (this._leftHandler.has(id)) {\n      this._leftHandler.activate(id);\n      return;\n    }\n\n    if (this._rightHandler.has(id)) {\n      this._rightHandler.activate(id);\n      return;\n    }\n\n    const dock = this._dockPanel;\n    const widget = find(dock.widgets(), value => value.id === id);\n\n    if (widget) {\n      dock.activateWidget(widget);\n    }\n  }\n\n  /*\n   * Activate the next Tab in the active TabBar.\n  */\n  activateNextTab(): void {\n    let current = this._currentTabBar();\n    if (!current) {\n      return;\n    }\n\n    let ci = current.currentIndex;\n    if (ci === -1) {\n      return;\n    }\n\n    if (ci < current.titles.length - 1) {\n      current.currentIndex += 1;\n      if (current.currentTitle) {\n        current.currentTitle.owner.activate();\n      }\n      return;\n    }\n\n    if (ci === current.titles.length - 1) {\n      let nextBar = this._adjacentBar('next');\n      if (nextBar) {\n        nextBar.currentIndex = 0;\n        if (nextBar.currentTitle) {\n          nextBar.currentTitle.owner.activate();\n        }\n      }\n    }\n  }\n\n  /*\n   * Activate the previous Tab in the active TabBar.\n  */\n  activatePreviousTab(): void {\n    let current = this._currentTabBar();\n    if (!current) {\n      return;\n    }\n\n    let ci = current.currentIndex;\n    if (ci === -1) {\n      return;\n    }\n\n    if (ci > 0) {\n      current.currentIndex -= 1;\n      if (current.currentTitle) {\n        current.currentTitle.owner.activate();\n      }\n      return;\n    }\n\n    if (ci === 0) {\n      let prevBar = this._adjacentBar('previous');\n      if (prevBar) {\n        let len = prevBar.titles.length;\n        prevBar.currentIndex = len - 1;\n        if (prevBar.currentTitle) {\n          prevBar.currentTitle.owner.activate();\n        }\n      }\n    }\n  }\n\n  /**\n   * Add a widget to the left content area.\n   *\n   * #### Notes\n   * Widgets must have a unique `id` property, which will be used as the DOM id.\n   */\n  addToLeftArea(widget: Widget, options: ApplicationShell.ISideAreaOptions = {}): void {\n    if (!widget.id) {\n      console.error('Widgets added to app shell must have unique id property.');\n      return;\n    }\n    let rank = 'rank' in options ? options.rank : DEFAULT_RANK;\n    this._leftHandler.addWidget(widget, rank!);\n    this._layoutModified.emit(void 0);\n  }\n\n  /**\n   * Add a widget to the main content area.\n   *\n   * #### Notes\n   * Widgets must have a unique `id` property, which will be used as the DOM id.\n   * All widgets added to the main area should be disposed after removal (or\n   * simply disposed in order to remove).\n   */\n  addToMainArea(widget: Widget, options: ApplicationShell.IMainAreaOptions = {}): void {\n    if (!widget.id) {\n      console.error('Widgets added to app shell must have unique id property.');\n      return;\n    }\n\n    let dock = this._dockPanel;\n\n    let ref: Widget | null = null;\n    if (options.ref) {\n      ref = find(dock.widgets(), value => value.id === options.ref!) || null;\n    }\n\n    let mode = options.mode || 'tab-after';\n\n    dock.addWidget(widget, { mode, ref });\n  }\n\n  /**\n   * Add a widget to the right content area.\n   *\n   * #### Notes\n   * Widgets must have a unique `id` property, which will be used as the DOM id.\n   */\n  addToRightArea(widget: Widget, options: ApplicationShell.ISideAreaOptions = {}): void {\n    if (!widget.id) {\n      console.error('Widgets added to app shell must have unique id property.');\n      return;\n    }\n    let rank = 'rank' in options ? options.rank : DEFAULT_RANK;\n    this._rightHandler.addWidget(widget, rank!);\n    this._onLayoutModified();\n  }\n\n  /**\n   * Add a widget to the top content area.\n   *\n   * #### Notes\n   * Widgets must have a unique `id` property, which will be used as the DOM id.\n   */\n  addToTopArea(widget: Widget, options: ApplicationShell.ISideAreaOptions = {}): void {\n    if (!widget.id) {\n      console.error('Widgets added to app shell must have unique id property.');\n      return;\n    }\n    // Temporary: widgets are added to the panel in order of insertion.\n    this._topPanel.addWidget(widget);\n    this._onLayoutModified();\n  }\n\n  /**\n   * Collapse the left area.\n   */\n  collapseLeft(): void {\n    this._leftHandler.collapse();\n    this._onLayoutModified();\n  }\n\n  /**\n   * Collapse the right area.\n   */\n  collapseRight(): void {\n    this._rightHandler.collapse();\n    this._onLayoutModified();\n  }\n\n  /**\n   * Expand the left area.\n   *\n   * #### Notes\n   * This will open the most recently used tab,\n   * or the first tab if there is no most recently used.\n   */\n  expandLeft(): void {\n    this._leftHandler.expand();\n    this._onLayoutModified();\n  }\n\n  /**\n   * Expand the right area.\n   *\n   * #### Notes\n   * This will open the most recently used tab,\n   * or the first tab if there is no most recently used.\n   */\n  expandRight(): void {\n    this._rightHandler.expand();\n    this._onLayoutModified();\n  }\n\n  /**\n   * Close all widgets in the main area.\n   */\n  closeAll(): void {\n    // Make a copy of all the widget in the dock panel (using `toArray()`)\n    // before removing them because removing them while iterating through them\n    // modifies the underlying data of the iterator.\n    each(toArray(this._dockPanel.widgets()), widget => { widget.close(); });\n  }\n\n  /**\n   * True if the given area is empty.\n   */\n  isEmpty(area: ApplicationShell.Area): boolean {\n    switch (area) {\n    case 'left':\n      return this._leftHandler.stackedPanel.widgets.length === 0;\n    case 'main':\n      return this._dockPanel.isEmpty;\n    case 'top':\n      return this._topPanel.widgets.length === 0;\n    case 'right':\n      return this._rightHandler.stackedPanel.widgets.length === 0;\n    default:\n      return true;\n    }\n  }\n\n  /**\n   * Restore the layout state for the application shell.\n   */\n  restoreLayout(layout: ApplicationShell.ILayout): void {\n    const { mainArea, leftArea, rightArea } = layout;\n\n    // Rehydrate the main area.\n    if (mainArea) {\n      const { currentWidget, dock, mode } = mainArea;\n\n      if (dock) {\n        this._dockPanel.restoreLayout(dock);\n      }\n      if (mode) {\n        this.mode = mode;\n      }\n      if (currentWidget) {\n        this.activateById(currentWidget.id);\n      }\n    }\n\n    // Rehydrate the left area.\n    if (leftArea) {\n      this._leftHandler.rehydrate(leftArea);\n    }\n\n    // Rehydrate the right area.\n    if (rightArea) {\n      this._rightHandler.rehydrate(rightArea);\n    }\n\n    if (!this._isRestored) {\n      // Make sure all messages in the queue are finished before notifying\n      // any extensions that are waiting for the promise that guarantees the\n      // application state has been restored.\n      MessageLoop.flush();\n      this._restored.resolve(layout);\n    }\n  }\n\n  /**\n   * Save the dehydrated state of the application shell.\n   */\n  saveLayout(): ApplicationShell.ILayout {\n    // If the application is in single document mode, use the cached layout if\n    // available. Otherwise, default to querying the dock panel for layout.\n    return {\n      mainArea: {\n        currentWidget: this._tracker.currentWidget,\n        dock: this.mode === 'single-document' ?\n          this._cachedLayout || this._dockPanel.saveLayout()\n            : this._dockPanel.saveLayout(),\n        mode: this._dockPanel.mode\n      },\n      leftArea: this._leftHandler.dehydrate(),\n      rightArea: this._rightHandler.dehydrate()\n    };\n  }\n\n  /**\n   * Returns the widgets for an application area.\n   */\n  widgets(area: ApplicationShell.Area): IIterator<Widget> {\n    switch (area) {\n      case 'main':\n        return this._dockPanel.widgets();\n      case 'left':\n        return iter(this._leftHandler.sideBar.titles.map(t => t.owner));\n      case 'right':\n        return iter(this._rightHandler.sideBar.titles.map(t => t.owner));\n      case 'top':\n        return this._topPanel.children();\n      default:\n        throw new Error('Invalid area');\n    }\n  }\n\n  /**\n   * Handle `after-attach` messages for the application shell.\n   */\n  protected onAfterAttach(msg: Message): void {\n    document.body.setAttribute(MODE_ATTRIBUTE, this.mode);\n  }\n\n  /*\n   * Return the tab bar adjacent to the current TabBar or `null`.\n   */\n  private _adjacentBar(direction: 'next' | 'previous'): TabBar<Widget> | null {\n    const current = this._currentTabBar();\n    if (!current) {\n      return null;\n    }\n\n    const bars = toArray(this._dockPanel.tabBars());\n    const len = bars.length;\n    const index = bars.indexOf(current);\n\n    if (direction === 'previous') {\n      return index > 0 ? bars[index - 1]\n        : index === 0 ? bars[len - 1]\n          : null;\n    }\n\n    // Otherwise, direction is 'next'.\n    return index < len - 1 ? bars[index + 1]\n      : index === len - 1 ? bars[0]\n        : null;\n  }\n\n  /*\n   * Return the TabBar that has the currently active Widget or null.\n   */\n  private _currentTabBar(): TabBar<Widget> | null {\n    const current = this._tracker.currentWidget;\n    if (!current) {\n      return null;\n    }\n\n    const title = current.title;\n    const bars = this._dockPanel.tabBars();\n    return find(bars, bar => bar.titles.indexOf(title) > -1) || null;\n  }\n\n  /**\n   * Handle a change to the dock area active widget.\n   */\n  private _onActiveChanged(sender: any, args: FocusTracker.IChangedArgs<Widget>): void {\n    if (args.newValue) {\n      args.newValue.title.className += ` ${ACTIVE_CLASS}`;\n    }\n    if (args.oldValue) {\n      args.oldValue.title.className = (\n        args.oldValue.title.className.replace(ACTIVE_CLASS, '')\n      );\n    }\n    this._activeChanged.emit(args);\n  }\n\n  /**\n   * Handle a change to the dock area current widget.\n   */\n  private _onCurrentChanged(sender: any, args: FocusTracker.IChangedArgs<Widget>): void {\n    if (args.newValue) {\n      args.newValue.title.className += ` ${CURRENT_CLASS}`;\n    }\n    if (args.oldValue) {\n      args.oldValue.title.className = (\n        args.oldValue.title.className.replace(CURRENT_CLASS, '')\n      );\n    }\n    this._currentChanged.emit(args);\n    this._onLayoutModified();\n  }\n\n  /**\n   * Handle a change to the layout.\n   */\n  private _onLayoutModified(): void {\n    this._layoutModified.emit(void 0);\n  }\n\n  /**\n   * A message hook for child add/remove messages on the main area dock panel.\n   */\n  private _dockChildHook = (handler: IMessageHandler, msg: Message): boolean => {\n    switch (msg.type) {\n      case 'child-added':\n        (msg as Widget.ChildMessage).child.addClass(ACTIVITY_CLASS);\n        this._tracker.add((msg as Widget.ChildMessage).child);\n        break;\n      case 'child-removed':\n        (msg as Widget.ChildMessage).child.removeClass(ACTIVITY_CLASS);\n        this._tracker.remove((msg as Widget.ChildMessage).child);\n        break;\n      default:\n        break;\n    }\n    return true;\n  }\n\n  private _activeChanged = new Signal<this, ApplicationShell.IChangedArgs>(this);\n  private _cachedLayout: DockLayout.ILayoutConfig | null = null;\n  private _currentChanged = new Signal<this, ApplicationShell.IChangedArgs>(this);\n  private _dockPanel: DockPanel;\n  private _hboxPanel: BoxPanel;\n  private _hsplitPanel: SplitPanel;\n  private _isRestored = false;\n  private _layoutModified = new Signal<this, void>(this);\n  private _leftHandler: Private.SideBarHandler;\n  private _restored = new PromiseDelegate<ApplicationShell.ILayout>();\n  private _rightHandler: Private.SideBarHandler;\n  private _tracker = new FocusTracker<Widget>();\n  private _topPanel: Panel;\n}\n\n\n/**\n * The namespace for `ApplicationShell` class statics.\n */\nexport\nnamespace ApplicationShell {\n  /**\n   * The areas of the application shell where widgets can reside.\n   */\n  export\n  type Area = 'main' | 'top' | 'left' | 'right';\n\n  /**\n   * The restorable description of an area within the main dock panel.\n   */\n  export\n  type AreaConfig = DockLayout.AreaConfig;\n\n  /**\n   * An arguments object for the changed signals.\n   */\n  export\n  type IChangedArgs = FocusTracker.IChangedArgs<Widget>;\n\n  /**\n   * A description of the application's user interface layout.\n   */\n  export\n  interface ILayout {\n    /**\n     * Indicates whether fetched session restore data was actually retrieved\n     * from the state database or whether it is a fresh blank slate.\n     *\n     * #### Notes\n     * This attribute is only relevant when the layout data is retrieved via a\n     * `fetch` call. If it is set when being passed into `save`, it will be\n     * ignored.\n     */\n    readonly fresh?: boolean;\n\n    /**\n     * The main area of the user interface.\n     */\n    readonly mainArea: IMainArea | null;\n\n    /**\n     * The left area of the user interface.\n     */\n    readonly leftArea: ISideArea | null;\n\n    /**\n     * The right area of the user interface.\n     */\n    readonly rightArea: ISideArea | null;\n  }\n\n  /**\n   * The restorable description of the main application area.\n   */\n  export\n  interface IMainArea {\n    /**\n     * The current widget that has application focus.\n     */\n    readonly currentWidget: Widget | null;\n\n    /**\n     * The contents of the main application dock panel.\n     */\n    readonly dock: DockLayout.ILayoutConfig | null;\n\n    /**\n     * The document mode (i.e., multiple/single) of the main dock panel.\n     */\n    readonly mode: DockPanel.Mode | null;\n  }\n\n  /**\n   * The restorable description of a sidebar in the user interface.\n   */\n  export\n  interface ISideArea {\n    /**\n     * A flag denoting whether the sidebar has been collapsed.\n     */\n    readonly collapsed: boolean;\n\n    /**\n     * The current widget that has side area focus.\n     */\n    readonly currentWidget: Widget | null;\n\n    /**\n     * The collection of widgets held by the sidebar.\n     */\n    readonly widgets: Array<Widget> | null;\n  }\n\n  /**\n   * The options for adding a widget to a side area of the shell.\n   */\n  export\n  interface ISideAreaOptions {\n    /**\n     * The rank order of the widget among its siblings.\n     */\n    rank?: number;\n  }\n\n  /**\n   * The options for adding a widget to a side area of the shell.\n   */\n  export\n  interface IMainAreaOptions extends DocumentRegistry.IOpenOptions {}\n}\n\n\nnamespace Private {\n  /**\n   * An object which holds a widget and its sort rank.\n   */\n  export\n  interface IRankItem {\n    /**\n     * The widget for the item.\n     */\n    widget: Widget;\n\n    /**\n     * The sort rank of the widget.\n     */\n    rank: number;\n  }\n\n  /**\n   * A less-than comparison function for side bar rank items.\n   */\n  export\n  function itemCmp(first: IRankItem, second: IRankItem): number {\n    return first.rank - second.rank;\n  }\n\n  /**\n   * Removes widgets that have been disposed from an area config, mutates area.\n   */\n  export\n  function normalizeAreaConfig(parent: DockPanel, area?: DockLayout.AreaConfig | null): void {\n    if (!area) {\n      return;\n    }\n    if (area.type === 'tab-area') {\n      area.widgets = area.widgets\n        .filter(widget => !widget.isDisposed && widget.parent === parent) as Widget[];\n      return;\n    }\n    area.children.forEach(child => { normalizeAreaConfig(parent, child); });\n  }\n\n  /**\n   * A class which manages a side bar and related stacked panel.\n   */\n  export\n  class SideBarHandler {\n    /**\n     * Construct a new side bar handler.\n     */\n    constructor(side: string) {\n      this._side = side;\n      this._sideBar = new TabBar<Widget>({\n        insertBehavior: 'none',\n        removeBehavior: 'none',\n        allowDeselect: true\n      });\n      this._stackedPanel = new StackedPanel();\n      this._sideBar.hide();\n      this._stackedPanel.hide();\n      this._lastCurrent = null;\n      this._sideBar.currentChanged.connect(this._onCurrentChanged, this);\n      this._sideBar.tabActivateRequested.connect(this._onTabActivateRequested, this);\n      this._stackedPanel.widgetRemoved.connect(this._onWidgetRemoved, this);\n    }\n\n    /**\n     * Get the tab bar managed by the handler.\n     */\n    get sideBar(): TabBar<Widget> {\n      return this._sideBar;\n    }\n\n    /**\n     * Get the stacked panel managed by the handler\n     */\n    get stackedPanel(): StackedPanel {\n      return this._stackedPanel;\n    }\n\n    /**\n     * Expand the sidebar.\n     *\n     * #### Notes\n     * This will open the most recently used tab, or the first tab\n     * if there is no most recently used.\n     */\n    expand(): void {\n      const previous =\n        this._lastCurrent || (this._items.length > 0 && this._items[0].widget);\n      if (previous) {\n        this.activate(previous.id);\n      }\n    }\n\n    /**\n     * Activate a widget residing in the side bar by ID.\n     *\n     * @param id - The widget's unique ID.\n     */\n    activate(id: string): void {\n      let widget = this._findWidgetByID(id);\n      if (widget) {\n        this._sideBar.currentTitle = widget.title;\n        widget.activate();\n      }\n    }\n\n    /**\n     * Test whether the sidebar has the given widget by id.\n     */\n    has(id: string): boolean {\n      return this._findWidgetByID(id) !== null;\n    }\n\n    /**\n     * Collapse the sidebar so no items are expanded.\n     */\n    collapse(): void {\n      this._sideBar.currentTitle = null;\n    }\n\n    /**\n     * Add a widget and its title to the stacked panel and side bar.\n     *\n     * If the widget is already added, it will be moved.\n     */\n    addWidget(widget: Widget, rank: number): void {\n      widget.parent = null;\n      widget.hide();\n      let item = { widget, rank };\n      let index = this._findInsertIndex(item);\n      ArrayExt.insert(this._items, index, item);\n      this._stackedPanel.insertWidget(index, widget);\n      this._sideBar.insertTab(index, widget.title);\n      this._refreshVisibility();\n    }\n\n    /**\n     * Dehydrate the side bar data.\n     */\n    dehydrate(): ApplicationShell.ISideArea {\n      let collapsed = this._sideBar.currentTitle === null;\n      let widgets = toArray(this._stackedPanel.widgets);\n      let currentWidget = widgets[this._sideBar.currentIndex];\n      return { collapsed, currentWidget, widgets };\n    }\n\n    /**\n     * Rehydrate the side bar.\n     */\n    rehydrate(data: ApplicationShell.ISideArea): void {\n      if (data.currentWidget) {\n        this.activate(data.currentWidget.id);\n      } else if (data.collapsed) {\n        this.collapse();\n      }\n    }\n\n    /**\n     * Find the insertion index for a rank item.\n     */\n    private _findInsertIndex(item: Private.IRankItem): number {\n      return ArrayExt.upperBound(this._items, item, Private.itemCmp);\n    }\n\n    /**\n     * Find the index of the item with the given widget, or `-1`.\n     */\n    private _findWidgetIndex(widget: Widget): number {\n      return ArrayExt.findFirstIndex(this._items, i => i.widget === widget);\n    }\n\n    /**\n     * Find the widget which owns the given title, or `null`.\n     */\n    private _findWidgetByTitle(title: Title<Widget>): Widget | null {\n      let item = find(this._items, value => value.widget.title === title);\n      return item ? item.widget : null;\n    }\n\n    /**\n     * Find the widget with the given id, or `null`.\n     */\n    private _findWidgetByID(id: string): Widget | null {\n      let item = find(this._items, value => value.widget.id === id);\n      return item ? item.widget : null;\n    }\n\n    /**\n     * Refresh the visibility of the side bar and stacked panel.\n     */\n    private _refreshVisibility(): void {\n      this._sideBar.setHidden(this._sideBar.titles.length === 0);\n      this._stackedPanel.setHidden(this._sideBar.currentTitle === null);\n    }\n\n    /**\n     * Handle the `currentChanged` signal from the sidebar.\n     */\n    private _onCurrentChanged(sender: TabBar<Widget>, args: TabBar.ICurrentChangedArgs<Widget>): void {\n      const oldWidget = args.previousTitle ? this._findWidgetByTitle(args.previousTitle) : null;\n      const newWidget = args.currentTitle ? this._findWidgetByTitle(args.currentTitle) : null;\n      if (oldWidget) {\n        oldWidget.hide();\n      }\n      if (newWidget) {\n        newWidget.show();\n      }\n      this._lastCurrent = newWidget || oldWidget;\n      if (newWidget) {\n        const id = newWidget.id;\n        document.body.setAttribute(`data-${this._side}-sidebar-widget`, id);\n      } else {\n        document.body.removeAttribute(`data-${this._side}-sidebar-widget`);\n      }\n      this._refreshVisibility();\n    }\n\n    /**\n     * Handle a `tabActivateRequest` signal from the sidebar.\n     */\n    private _onTabActivateRequested(sender: TabBar<Widget>, args: TabBar.ITabActivateRequestedArgs<Widget>): void {\n      args.title.owner.activate();\n    }\n\n    /*\n     * Handle the `widgetRemoved` signal from the stacked panel.\n     */\n    private _onWidgetRemoved(sender: StackedPanel, widget: Widget): void {\n      if (widget === this._lastCurrent) {\n        this._lastCurrent = null;\n      }\n      ArrayExt.removeAt(this._items, this._findWidgetIndex(widget));\n      this._sideBar.removeTab(widget.title);\n      this._refreshVisibility();\n    }\n\n    private _items = new Array<Private.IRankItem>();\n    private _side: string;\n    private _sideBar: TabBar<Widget>;\n    private _stackedPanel: StackedPanel;\n    private _lastCurrent: Widget | null;\n  }\n\n}\n\n"]}