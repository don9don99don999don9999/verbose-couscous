{"version":3,"file":"codemirror-ipythongfm.js","sourceRoot":"","sources":["../../../../codemirror/src/codemirror-ipythongfm.ts"],"names":[],"mappings":";AAAA,0CAA0C;AAC1C,2DAA2D;;AAE3D,uCACoB;AAEpB,qCAAmC;AACnC,mCAAiC;AACjC,2CAAyC;AAGzC;;;;;;;;GAQG;AACH,UAAU,CAAC,UAAU,CAAC,YAAY,EAAE,UAAC,MAAsC,EAAE,WAAiB;IAC5F,IAAI,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IAChD,IAAI,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAEjD,MAAM,CAAC,UAAU,CAAC,gBAAgB,CAChC,OAAO,EACP;QACE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;QACrB,IAAI,EAAE,OAAO;QACb,UAAU,EAAE,SAAS;KACtB,EACD;QACE,4FAA4F;QAC5F,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI;QACvB,IAAI,EAAE,OAAO;QACb,UAAU,EAAE,SAAS;KACtB,EACD;QACE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;QACzB,IAAI,EAAE,OAAO;QACb,UAAU,EAAE,SAAS;KACtB,EACD;QACE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;QACzB,IAAI,EAAE,OAAO;QACb,UAAU,EAAE,SAAS;KACtB;IACD,6CAA6C;KAC9C,CAAC;AACJ,CAAC,EAAE,KAAK,CAAC,CAAC;AAEV,UAAU,CAAC,UAAU,CAAC,mBAAmB,EAAE,YAAY,CAAC,CAAC;AACzD,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC;IACvB,GAAG,EAAE,EAAE;IACP,IAAI,EAAE,mBAAmB;IACzB,IAAI,EAAE,YAAY;IAClB,IAAI,EAAE,YAAY;CACnB,CAAC,CAAC","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport * as CodeMirror\n  from 'codemirror';\n\nimport 'codemirror/mode/stex/stex';\nimport 'codemirror/mode/gfm/gfm';\nimport 'codemirror/addon/mode/multiplex';\n\n\n/**\n * Define an IPython GFM (GitHub Flavored Markdown) mode.\n *\n * Is just a slightly altered GFM Mode with support for LaTeX.\n * LaTeX support was supported by Codemirror GFM as of\n *   https://github.com/codemirror/CodeMirror/pull/567\n *  But was later removed in\n *   https://github.com/codemirror/CodeMirror/commit/d9c9f1b1ffe984aee41307f3e927f80d1f23590c\n */\nCodeMirror.defineMode('ipythongfm', (config: CodeMirror.EditorConfiguration, modeOptions?: any) => {\n  let gfmMode = CodeMirror.getMode(config, 'gfm');\n  let texMode = CodeMirror.getMode(config, 'stex');\n\n  return CodeMirror.multiplexingMode(\n    gfmMode,\n    {\n      open: '$', close: '$',\n      mode: texMode,\n      delimStyle: 'delimit'\n    },\n    {\n      // not sure this works as $$ is interpreted at (opening $, closing $, as defined just above)\n      open: '$$', close: '$$',\n      mode: texMode,\n      delimStyle: 'delimit'\n    },\n    {\n      open: '\\\\(', close: '\\\\)',\n      mode: texMode,\n      delimStyle: 'delimit'\n    },\n    {\n      open: '\\\\[', close: '\\\\]',\n      mode: texMode,\n      delimStyle: 'delimit'\n    }\n    // .. more multiplexed styles can follow here\n  );\n}, 'gfm');\n\nCodeMirror.defineMIME('text/x-ipythongfm', 'ipythongfm');\nCodeMirror.modeInfo.push({\n  ext: [],\n  mime: 'text/x-ipythongfm',\n  mode: 'ipythongfm',\n  name: 'ipythongfm'\n});\n"]}