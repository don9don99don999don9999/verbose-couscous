{"version":3,"file":"codemirror-ipython.js","sourceRoot":"","sources":["../../../../codemirror/src/codemirror-ipython.ts"],"names":[],"mappings":";AAAA,0CAA0C;AAC1C,2DAA2D;;AAE3D,uCACoB;AAEpB,gCAA8B;AAC9B,yCAAuC;AAGvC;;;;GAIG;AACH,UAAU,CAAC,UAAU,CAAC,SAAS,EAAE,UAAC,MAAsC,EAAE,WAAiB;IACvF,IAAI,UAAU,GAAQ,EAAE,CAAC;IACzB,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,WAAW,CAAC,CAAC,CAAC;QAC7B,EAAE,CAAC,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACrC,UAAU,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC;QACvC,CAAC;IACH,CAAC;IACD,UAAU,CAAC,IAAI,GAAG,QAAQ,CAAC;IAC3B,UAAU,CAAC,eAAe,GAAG,IAAI,MAAM,CAAC,6BAA6B,CAAC,CAAC;IACvE,UAAU,CAAC,WAAW,GAAG,IAAI,MAAM,CAAC,mDAAmD,CAAC,CAAC;IACzF,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;AAClD,CAAC,EAAE,QAAQ,CAAC,CAAC;AAEb,UAAU,CAAC,UAAU,CAAC,gBAAgB,EAAE,SAAS,CAAC,CAAC;AACnD,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC;IACvB,GAAG,EAAE,EAAE;IACP,IAAI,EAAE,gBAAgB;IACtB,IAAI,EAAE,SAAS;IACf,IAAI,EAAE,SAAS;CAChB,CAAC,CAAC","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport * as CodeMirror\n  from 'codemirror';\n\nimport 'codemirror/mode/meta';\nimport 'codemirror/mode/python/python';\n\n\n/**\n * Define an IPython codemirror mode.\n *\n * It is a slightly altered Python Mode with a `?` operator.\n */\nCodeMirror.defineMode('ipython', (config: CodeMirror.EditorConfiguration, modeOptions?: any) => {\n    let pythonConf: any = {};\n    for (let prop in modeOptions) {\n      if (modeOptions.hasOwnProperty(prop)) {\n        pythonConf[prop] = modeOptions[prop];\n      }\n    }\n    pythonConf.name = 'python';\n    pythonConf.singleOperators = new RegExp('^[\\\\+\\\\-\\\\*/%&|@\\\\^~<>!\\\\?]');\n    pythonConf.identifiers = new RegExp('^[_A-Za-z\\u00A1-\\uFFFF][_A-Za-z0-9\\u00A1-\\uFFFF]*');\n    return CodeMirror.getMode(config, pythonConf);\n}, 'python');\n\nCodeMirror.defineMIME('text/x-ipython', 'ipython');\nCodeMirror.modeInfo.push({\n  ext: [],\n  mime: 'text/x-ipython',\n  mode: 'ipython',\n  name: 'ipython'\n});\n"]}