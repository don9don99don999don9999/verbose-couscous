"use strict";
// Copyright 2018 Wolf Vollprecht
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var w = window;
var web_path = "https://raw.githubusercontent.com/jgraph/mxgraph/master/javascript/examples/grapheditor/www/";
w.RESOURCES_BASE = web_path + 'resources/';
w.STENCIL_PATH = web_path + 'stencils/';
w.IMAGE_PATH = web_path + 'images/';
w.STYLE_PATH = web_path + 'styles/';
w.CSS_PATH = web_path + 'styles/';
w.OPEN_FORM = web_path + 'open.html';
// w.mxBasePath = "http://localhost:8000/src/mxgraph/javascript/src/";
w.mxLoadStylesheets = false; // disable loading stylesheets
w.mxLoadResources = false;
var mx = require("./mxgraph/javascript/examples/grapheditor/www/modulated.js");
var docregistry_1 = require("@jupyterlab/docregistry");
var coreutils_1 = require("@jupyterlab/coreutils");
var widgets_1 = require("@phosphor/widgets");
var coreutils_2 = require("@phosphor/coreutils");
require("./mxgraph/javascript/src/css/common.css");
require("./mxgraph/javascript/examples/grapheditor/www/styles/grapheditor.css");
var pack_1 = require("./pack");
var DIRTY_CLASS = 'jp-mod-dirty';
var DrawioWidget = /** @class */ (function (_super) {
    __extends(DrawioWidget, _super);
    function DrawioWidget(context) {
        var _this = _super.call(this) || this;
        _this._ready = new coreutils_2.PromiseDelegate();
        _this.context = context;
        _this._onTitleChanged();
        context.pathChanged.connect(_this._onTitleChanged, _this);
        _this.context.ready.then(function () { _this._onContextReady(); });
        _this.context.ready.then(function () { _this._handleDirtyState(); });
        return _this;
    }
    DrawioWidget.prototype.onAfterShow = function (msg) {
        this._loadEditor(this.node);
        this._onContentChanged();
    };
    DrawioWidget.prototype.getSVG = function () {
        return mx.mxUtils.getXml(this._editor.editor.graph.getSvg());
    };
    DrawioWidget.prototype._onContextReady = function () {
        var contextModel = this.context.model;
        // Set the editor model value.
        this._onContentChanged();
        contextModel.contentChanged.connect(this._onContentChanged, this);
        contextModel.stateChanged.connect(this._onModelStateChanged, this);
        this._editor.sidebarContainer.style.width = '208px';
        var footer = document.getElementsByClassName('geFooterContainer');
        this._editor.refresh();
        if (footer.length) {
            this._editor.footerHeight = 0;
            for (var i = 0; i < footer.length; i++) {
                var f = footer[i];
                f.style.height = '0px';
                f.style.display = 'none';
            }
            this._editor.refresh();
        }
        this._ready.resolve(void 0);
    };
    DrawioWidget.prototype._loadEditor = function (node, contents) {
        var _this = this;
        // Adds required resources (disables loading of fallback properties, this can only
        // be used if we know that all keys are defined in the language specific file)
        mx.mxResources.loadDefaultBundle = false;
        // Fixes possible asynchronous requests
        mx.mxResources.parse(pack_1.grapheditor_txt);
        var oParser = new DOMParser();
        var oDOM = oParser.parseFromString(pack_1.default_xml, "text/xml");
        var themes = new Object(null);
        themes[mx.Graph.prototype.defaultThemeName] = oDOM.documentElement;
        this._editor = new mx.EditorUi(new mx.Editor(false, themes), node);
        this._editor.editor.graph.model.addListener(mx.mxEvent.NOTIFY, function (sender, evt) {
            _this._saveToContext();
        });
        return this._editor;
    };
    /**
     * Handle a change to the title.
     */
    DrawioWidget.prototype._onTitleChanged = function () {
        this.title.label = coreutils_1.PathExt.basename(this.context.localPath);
    };
    DrawioWidget.prototype._onContentChanged = function () {
        if (this._editor === undefined) {
            return;
        }
        var oldValue = mx.mxUtils.getXml(this._editor.editor.getGraphXml());
        var newValue = this.context.model.toString();
        if (oldValue !== newValue && !this._editor.editor.graph.isEditing()) {
            if (newValue.length) {
                var xml = mx.mxUtils.parseXml(newValue);
                this._editor.editor.setGraphXml(xml.documentElement);
            }
        }
    };
    DrawioWidget.prototype._saveToContext = function () {
        if (this._editor.editor.graph.isEditing()) {
            this._editor.editor.graph.stopEditing();
        }
        var xml = mx.mxUtils.getXml(this._editor.editor.getGraphXml());
        this.context.model.fromString(xml);
    };
    DrawioWidget.prototype._onModelStateChanged = function (sender, args) {
        if (args.name === 'dirty') {
            this._handleDirtyState();
        }
    };
    DrawioWidget.prototype._handleDirtyState = function () {
        if (this.context.model.dirty) {
            this.title.className += " " + DIRTY_CLASS;
        }
        else {
            this.title.className = this.title.className.replace(DIRTY_CLASS, '');
        }
    };
    Object.defineProperty(DrawioWidget.prototype, "ready", {
        /**
         * A promise that resolves when the csv viewer is ready.
         */
        get: function () {
            return this._ready.promise;
        },
        enumerable: true,
        configurable: true
    });
    return DrawioWidget;
}(widgets_1.Widget));
exports.DrawioWidget = DrawioWidget;
/**
 * A widget factory for drawio.
 */
var DrawioFactory = /** @class */ (function (_super) {
    __extends(DrawioFactory, _super);
    function DrawioFactory() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Create a new widget given a context.
     */
    DrawioFactory.prototype.createNewWidget = function (context) {
        return new DrawioWidget(context);
    };
    return DrawioFactory;
}(docregistry_1.ABCWidgetFactory));
exports.DrawioFactory = DrawioFactory;
